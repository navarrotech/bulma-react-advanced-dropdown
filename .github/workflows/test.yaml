# Copyright Â© 2024 Navarrotech

name: Test and build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# The whole purpose of this is to ensure that:
# 1. The code is linted
# 2. The unit tests all pass (not to generate a report)
# 3. The build is successful
# On all pull requests and main branch pushes

# We let another action (like circleci) do the actual building and packaging

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    container:
      image: node:latest

    steps:

      # Setup:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore node_modules cache
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/yarn.lock') }}

      # Install dependencies & make assets:
      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install

      - name: Ensure eslint
        run: yarn lint

      # Testing:
      - name: Run unit tests
        run: yarn test

      # Build:
      - name: Build
        run: yarn build

      # Save cache
      - name: Save node_modules cache
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-${{ hashFiles('**/yarn.lock') }}

      # Publish package to NPM registry (if on main branch only)
      # - name: Publish to npm
      #   if: github.ref == 'refs/heads/main'
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # # Cleanup NPM from publishing
      # - name: Clean up npm cache
      #   if: github.ref == 'refs/heads/main'
      #   run: npm cache clean --force
